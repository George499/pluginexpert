name: Deploy to Production

on:
  push:
    branches:
      - main
    paths:
      - 'backend_strapi/**'
      - 'frontend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Клонируем репозиторий
    - name: Checkout repository
      uses: actions/checkout@v2

    # 2. Устанавливаем Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ' v22.12.0' # Актуальная версия Node.js

    # 3. Установка зависимостей и сборка фронтенда
    - name: Install frontend dependencies
      run: npm install
      working-directory: ./frontend

    - name: Build frontend
      run: npm run build
      working-directory: ./frontend

    # 4. Проверка изменений в бэкенде
    - name: Check for backend changes
      id: backend_changes
      run: |
        if git diff --quiet HEAD~1 HEAD -- backend_strapi; then
          echo "no_changes=true" >> $GITHUB_ENV
        else
          echo "no_changes=false" >> $GITHUB_ENV
        fi

    # 5. Установка зависимостей и сборка бэкенда
    - name: Install backend dependencies and build
      if: env.no_changes == 'false'
      run: |
        npm install
        npm run build
      working-directory: ./backend_strapi

    # 6. Передаём файлы фронтенда на сервер
    - name: Upload frontend build to server
      uses: appleboy/scp-action@master
      with:
        source: ./frontend/build/
        target: ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/pluginexpert/frontend/build/
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}

    # 7. Передаём файлы бэкенда на сервер
    - name: Upload backend to server
      if: env.no_changes == 'false'
      uses: appleboy/scp-action@master
      with:
        source: ./backend_strapi/
        target: ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/pluginexpert/backend_strapi/
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}

    # 8. Деплой на сервер
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          # Убедимся, что Node.js установлен на сервере
          if ! [ -x "$(command -v node)" ]; then
            echo "Node.js не найден, устанавливаю..."
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Переходим в директорию проекта
          cd ~/pluginexpert

          # Убедимся, что директория фронтенда существует
          if [ -d ./frontend/build ]; then
            echo "Frontend build files uploaded successfully."
          else
            echo "Error: Frontend build files are missing."
            exit 1
          fi

          # Обновляем бэкенд (если были изменения)
          if [ -d ./backend_strapi ]; then
            echo "Backend files uploaded successfully."
          else
            echo "Error: Backend files are missing."
            exit 1
          fi

          # Перезапуск процессов через PM2
          pm2 restart 6 # Frontend
          pm2 restart 5 # Backend
